<?php
 namespace Mgt\Varnish\Block\Adminhtml\System; class CheckCronJob extends \Magento\Backend\Block\Template { const CACHE_WARMER_CACHE_KEY = "\115\147\164\103\141\x63\150\145\127\141\162\155\145\x72"; const CRON_WARNING_MESSAGE_MINUTES = 10; protected $cache; protected $varnishConfig; protected $config; protected $directoryList; public function __construct(\Magento\Backend\Block\Template\Context $context, \Magento\Framework\App\Filesystem\DirectoryList $directoryList, \Mgt\Varnish\Model\Cache\Backend\File $cache, \Magento\Framework\App\Config $config, \Mgt\Varnish\Model\Cache\Config $varnishConfig, array $data = []) { goto a08a5; a08a5: parent::__construct($context, $data); goto a4b05; c0374: $this->cache = $cache; goto bfac4; f18e9: $this->varnishConfig = $varnishConfig; goto F5c0b; bfac4: $this->config = $config; goto f18e9; a4b05: $this->directoryList = $directoryList; goto c0374; F5c0b: } public function isVarnishEnabled() { $isVarnishEnabled = $this->varnishConfig->isEnabled(); return $isVarnishEnabled; } public function isCacheWarmerEnabled() { $isCacheWarmerEnabled = $this->varnishConfig->isCacheWarmerEnabled(); return $isCacheWarmerEnabled; } public function showCronNotRunningMessage() { goto ffd00; d70a9: B3459: goto Db75e; A86b7: $dateDiff = $now->diff($lastRunning); goto a6a15; c2e32: $now = new \DateTime("\156\x6f\167", new \DateTimeZone("\x55\x54\x43")); goto af990; F9bf8: return $showCronNotRunningMessage; goto cb1d0; abcb5: if (0 == $lastRunningTimestamp) { goto Fffc8; } goto c2e32; e17ad: ea9dc: goto F9bf8; a6a15: $totalMinutes = $dateDiff->days * 24 * 60; goto e403d; F1133: $lastRunning->setTimestamp($lastRunningTimestamp); goto A86b7; E8567: if (!(true === $isVarnishEnabled && true === $isCacheWarmerEnabled)) { goto ea9dc; } goto D1f8c; f8d08: $totalMinutes += $dateDiff->i; goto D8fc6; D8fc6: if (!($totalMinutes >= self::CRON_WARNING_MESSAGE_MINUTES)) { goto B3459; } goto c24d6; D1f8c: $lastRunningTimestamp = $this->getLastRunningTimestamp(); goto abcb5; b7174: $lastRunning->setTimezone(new \DateTimeZone("\x55\124\103")); goto F1133; e403d: $totalMinutes += $dateDiff->h * 60; goto f8d08; a3a90: $showCronNotRunningMessage = true; goto C8c04; B39a3: $isVarnishEnabled = $this->isVarnishEnabled(); goto A1332; C8c04: Ecc26: goto e17ad; ffd00: $showCronNotRunningMessage = false; goto B39a3; Db75e: goto Ecc26; goto Fa7eb; Fa7eb: Fffc8: goto a3a90; A1332: $isCacheWarmerEnabled = $this->isCacheWarmerEnabled(); goto E8567; c24d6: $showCronNotRunningMessage = true; goto d70a9; af990: $lastRunning = new \Datetime(); goto b7174; cb1d0: } protected function getLastRunningTimestamp() { $lastRunningTimestamp = (int) $this->cache->load(self::CACHE_WARMER_CACHE_KEY); return $lastRunningTimestamp; } public function getCronJobCommand() { $cronJobCommand = sprintf("\x70\x68\160\x20\45\x73\57\x62\x69\x6e\x2f\x6d\141\x67\145\x6e\x74\x6f\40\x6d\147\x74\x2d\166\141\162\x6e\x69\163\x68\x3a\143\x61\143\x68\145\x2d\167\x61\162\155\x65\x72", $this->directoryList->getRoot()); return $cronJobCommand; } }
