<?php
 namespace Mgt\Varnish\Console\Command; use Symfony\Component\Console\Command\Command; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Filesystem\Filesystem; use Symfony\Component\Process\Process; class CacheWarmerCommand extends Command { const USER_AGENT = "\x4d\x67\164\x56\x61\162\x6e\x69\x73\150\103\x72\x61\167\154\145\x72"; const CACHE_WARMER_CACHE_KEY = "\115\147\164\103\141\143\150\x65\127\141\162\155\x65\162"; const CACHE_WARMER_CRAWLED_URLS = "\115\x67\164\x43\x61\x63\x68\145\127\x61\162\x6d\x65\162\x43\162\141\x77\154\145\x64\x55\162\154\x73"; protected $curlAdapter; protected $logger; protected $directoryList; protected $storeManager; protected $cache; protected $cachePurger; protected $lockFile; protected $isLocked; protected $varnishConfig; protected $urlResource; protected $urlQueueResource; protected $urlQueueCollection; public function __construct(\Magento\Framework\HTTP\Adapter\Curl $curlAdapter, \Psr\Log\LoggerInterface $logger, \Magento\Framework\App\Filesystem\DirectoryList $directoryList, \Magento\Store\Model\StoreManagerInterface $storeManager, \Mgt\Varnish\Model\Cache\Backend\File $cache, \Magento\CacheInvalidate\Model\PurgeCache $cachePurger, \Mgt\Varnish\Model\Cache\Config $varnishConfig, \Mgt\Varnish\Model\ResourceModel\Url $urlResource, \Mgt\Varnish\Model\ResourceModel\UrlQueue $urlQueueResource, \Mgt\Varnish\Model\ResourceModel\UrlQueue\Collection $urlQueueCollection) { goto Cbcaa; B2b76: $this->storeManager = $storeManager; goto A5d36; fdb75: $this->varnishConfig = $varnishConfig; goto a4796; Ed475: $this->logger = $logger; goto Ba44c; b464a: $this->cachePurger = $cachePurger; goto fdb75; A5d36: $this->cache = $cache; goto b464a; f1e35: $this->urlQueueCollection = $urlQueueCollection; goto bf166; Ba44c: $this->directoryList = $directoryList; goto B2b76; Cbcaa: $this->curlAdapter = $curlAdapter; goto Ed475; a4796: $this->urlResource = $urlResource; goto be0ee; be0ee: $this->urlQueueResource = $urlQueueResource; goto f1e35; bf166: parent::__construct(); goto F43a8; F43a8: } protected function configure() { goto B3697; c153d: $this->setDescription("\x4d\x47\x54\x20\126\x61\162\x6e\151\163\x68\40\103\x61\143\150\145\40\x57\141\x72\x6d\145\x72"); goto F3427; B3697: $this->setName("\x6d\x67\164\55\166\x61\162\x6e\151\163\150\x3a\143\141\143\150\x65\55\167\141\162\155\145\x72"); goto c153d; F3427: parent::configure(); goto Ccdd2; Ccdd2: } protected function execute(InputInterface $input, OutputInterface $output) { try { goto a58e8; Cc724: $this->urlQueueCollection->addOrder("\x70\162\151\x6f\162\151\164\171"); goto ac7c6; ac7c6: $this->urlQueueCollection->load(); goto e58ff; e741a: $numberOfProcessingUnits = $this->runCommand("\156\x70\x72\x6f\x63"); goto b4f24; E6565: F88cb: goto baa75; F8030: $urls = []; goto C00ea; B0525: d4ffd: goto F8581; fbe51: $this->urlQueueCollection->setPageSize($numberOfThreads); goto Cc724; e3ad2: $this->deleteExpiredUrls(); goto ec2b6; D5535: E05ab: goto d5ded; d5ded: F2f4b: goto E42d3; ec2b6: $break = false; goto e6ae4; d3743: $output->writeln("\x43\x61\143\x68\x65\40\127\141\x72\155\145\162\x20\151\x73\40\x61\154\x72\x65\141\x64\x79\x20\162\165\x6e\x6e\x69\156\x67"); goto Ef580; Eca8c: if ($break == false) { goto A86a2; } goto D5535; dd1f8: C6dbd: goto acf4d; E7ade: $totalCpuUtilization = $loadAverage[0] * 100 / $numberOfProcessingUnits; goto f594f; C58d7: $break = true; goto c3529; af198: $break = true; goto C442c; b4f24: $loadAverage = sys_getloadavg(); goto E7ade; bf7a2: $this->lock(); goto e3ad2; cffcf: $numberOfThreads = $this->varnishConfig->getNumberOfCacheWarmerThreads(); goto B839f; e58ff: if (count($this->urlQueueCollection)) { goto a8284; } goto C58d7; c6733: if (!($totalCpuUtilization > $cacheWarmerCpuLimit)) { goto C6dbd; } goto b4528; c3529: goto d4ffd; goto a08cc; A130a: if (false === $this->isLocked()) { goto A1ce9; } goto d3743; a58e8: ini_set("\155\145\x6d\157\162\171\x5f\x6c\x69\155\151\164", "\x32\60\64\70\x4d"); goto A130a; B839f: $i = $i + $numberOfThreads; goto befd0; Ef580: goto F2f4b; goto B6fe4; F8581: C1ad5: goto Fe5d8; acf4d: c42f7: goto Bb9a2; E2ed1: if (!(true === $isCacheWarmerCpuLimitEnabled)) { goto c42f7; } goto e741a; Bb9a2: if (!(false === $break)) { goto C1ad5; } goto cffcf; d6e01: $isCacheWarmerCpuLimitEnabled = $this->varnishConfig->isCacheWarmerCpuLimitEnabled(); goto E2ed1; befd0: $this->urlQueueCollection->clear(); goto fbe51; ec4cf: $output->writeln(sprintf("\103\x75\x72\x72\145\x6e\164\x6c\171\40\x74\x68\x65\x20\103\120\x55\40\x6c\151\155\x69\164\x20\x68\x61\x73\x20\142\x65\x65\156\40\x72\145\141\143\x68\x65\144\x2c\x20\103\x50\x55\x3a\40\42\45\x73\40\x70\x65\162\x63\145\x6e\164\42\54\40\x4c\x69\x6d\x69\x74\72\x20\42\45\163\40\x70\145\x72\x63\145\156\164\x22", round($totalCpuUtilization), round($cacheWarmerCpuLimit))); goto dd1f8; C442c: f8abf: goto Eca8c; B6fe4: A1ce9: goto bf7a2; fbdd3: $this->deleteFromQueue($urls); goto B0525; a08cc: a8284: goto F8030; e6ae4: $i = 0; goto E4b58; ff745: $this->updateTimestamp(); goto d6e01; E4b58: A86a2: goto ff745; baa75: $this->crawlUrls($urls, $output); goto fbdd3; C00ea: foreach ($this->urlQueueCollection as $urlQueue) { try { goto Fafa4; E75fe: $url = sprintf("\45\x73\57\x25\163", rtrim($store->getBaseUrl(), "\57"), ltrim($urlQueue->getPath(), "\57")); goto e1418; e1418: $urls[$urlQueue->getId()] = $url; goto eeb79; Fafa4: $storeId = $urlQueue->getStoreId(); goto Fb775; Fb775: $store = $this->storeManager->getStore($storeId); goto E75fe; eeb79: } catch (\Exception $e) { } Bb321: } goto E6565; Fe5d8: if (!($i == 1000)) { goto f8abf; } goto af198; b4528: $break = true; goto ec4cf; eb7b2: $cacheWarmerCpuLimit = $this->varnishConfig->getCacheWarmerCpuLimit(); goto c6733; f594f: $totalCpuUtilization = min($totalCpuUtilization, 100); goto eb7b2; E42d3: } catch (\Exception $e) { goto D4771; Fba2d: return \Magento\Framework\Console\Cli::RETURN_FAILURE; goto ce5e6; d484b: $output->writeln(sprintf("\74\145\162\162\x6f\162\76\x25\x73\74\57\x65\162\162\x6f\x72\76", $errorMessage)); goto Fba2d; D4771: $errorMessage = $e->getMessage(); goto d484b; ce5e6: } } protected function updateTimestamp() { goto c493a; fe20d: $now = $now->getTimestamp(); goto d4a70; d4a70: $this->cache->save($now, self::CACHE_WARMER_CACHE_KEY); goto fdd08; c493a: $now = new \DateTime("\x6e\157\x77", new \DateTimeZone("\125\124\x43")); goto fe20d; fdd08: } public function crawlUrls(array $urls, OutputInterface $output) { try { goto C2a1b; f8d7c: f8cff: goto A53ea; Accf6: foreach ($urls as $url) { $output->writeln(sprintf("\x3c\x69\x6e\146\x6f\76\x22\x25\163\x22\x20\143\x72\x61\167\154\x65\x64\x3c\x2f\151\x6e\146\x6f\76", $url)); D47d4: } goto f8d7c; C2a1b: $options = array(CURLOPT_USERAGENT => self::USER_AGENT, CURLOPT_SSL_VERIFYPEER => 0); goto Aaa98; Aaa98: $this->curlAdapter->multiRequest($urls, $options); goto Accf6; A53ea: } catch (\Exception $e) { $errorMessage = sprintf("\101\x6e\x20\x65\162\162\x6f\162\40\157\x63\x63\x75\x72\x72\x65\x64\40\x64\x75\162\x69\x6e\147\40\x63\x72\141\167\x6c\x69\156\147\40\x75\162\154\163\x2c\40\x65\162\x72\x6f\162\40\x6d\x65\163\163\141\x67\145\x3a\40\x25\163", $e->getMessage()); $this->logger->error($errorMessage); } } protected function deleteExpiredUrls() { try { $this->urlResource->deleteExpiredUrls(); } catch (\Exception $e) { $errorMessage = sprintf("\x41\x6e\40\x65\x72\162\x6f\162\40\157\143\143\165\x72\162\145\144\40\144\165\162\x69\x6e\x67\x20\x64\x65\x6c\x65\164\x69\156\x67\40\145\x78\160\151\x72\x65\144\x20\165\x72\154\x73\54\40\145\x72\162\x6f\162\40\x6d\x65\163\x73\x61\147\x65\72\40\45\163", $e->getMessage()); $this->logger->error($errorMessage); } } public function deleteFromQueue(array $urls) { try { $urlIds = array_keys($urls); $this->urlQueueResource->deleteFromQueue($urlIds); } catch (\Exception $e) { $errorMessage = sprintf("\x41\x6e\x20\145\162\162\x6f\x72\x20\157\x63\x63\x75\x72\x72\x65\144\x20\x64\x75\x72\x69\156\147\40\x64\145\x6c\145\164\151\x6e\x67\40\x75\x72\154\x73\54\x20\x65\x72\x72\157\x72\x20\x6d\145\x73\163\141\147\x65\72\x20\45\x73", $e->getMessage()); $this->logger->error($errorMessage); } } protected function getLockFile() { goto a231b; A9819: if (is_file($lockFile)) { goto bdb9b; } goto ebb31; C71d1: $lockFile = sprintf("\x25\163\x2f\155\147\164\137\x76\141\162\x6e\x69\x73\150\137\143\x61\x63\x68\x65\137\x63\162\141\167\154\x65\162\56\x6c\157\143\x6b", $lockFileDirectory); goto d28be; ad193: return $this->lockFile; goto F17f9; baaa5: fwrite($this->lockFile, date("\162")); goto Af21f; d28be: $filesystem = new Filesystem(); goto A00b9; c51db: $lockFileDirectory = $this->directoryList->getPath("\x74\x6d\160"); goto C71d1; E62d4: Cde19: goto baaa5; A00b9: $filesystem->mkdir(dirname($lockFile)); goto A9819; Af21f: af1f0: goto ad193; a231b: if (!(null === $this->lockFile)) { goto af1f0; } goto c51db; ebb31: $this->lockFile = fopen($lockFile, "\170"); goto C6fe5; C6db2: $this->lockFile = fopen($lockFile, "\x77"); goto E62d4; C6fe5: goto Cde19; goto cede8; cede8: bdb9b: goto C6db2; F17f9: } protected function lock() { goto D64bf; ffb29: $lockFile = $this->getLockFile(); goto a0400; a0400: flock($lockFile, LOCK_EX | LOCK_NB); goto c6b04; c6b04: return $this; goto d4f54; D64bf: $this->isLocked = true; goto ffb29; d4f54: } protected function unlock() { goto c5d05; C7f05: return $this; goto D704d; A841a: $lockFile = $this->getLockFile(); goto C6038; C6038: flock($lockFile, LOCK_UN); goto C7f05; c5d05: $this->isLocked = false; goto A841a; D704d: } protected function isLocked() { goto b9cc0; b2e24: return true; goto d3581; F8256: return false; goto Fa310; e5069: $fp = $this->getLockFile(); goto a6b94; Ec833: flock($fp, LOCK_UN); goto F8256; d3581: goto a7671; goto Dadc3; Dadc3: A95f6: goto Eb350; a6b94: if (!flock($fp, LOCK_EX | LOCK_NB)) { goto efe2b; } goto Ec833; Fa310: efe2b: goto b2e24; b9cc0: if ($this->isLocked !== null) { goto A95f6; } goto e5069; Eb350: return $this->isLocked; goto De7a8; De7a8: a7671: goto A1f54; A1f54: } protected function runCommand($command, $timeout = 30) { goto E1b16; Ee4f5: $process->setTimeout($timeout); goto Bcbe1; E1b16: $process = new Process($command); goto Ee4f5; Bd344: return $output; goto ea580; B1488: throw new \RuntimeException($process->getErrorOutput()); goto Fefaa; D80f8: $output = trim($process->getOutput()); goto Bd344; Bcbe1: $process->run(); goto d9f48; d9f48: if (!(false === $process->isSuccessful())) { goto c2240; } goto B1488; Fefaa: c2240: goto D80f8; ea580: } public function __destruct() { $this->unlock(); } }
