<?php
 namespace Mgt\Varnish\Model\Cache; class Config { protected $config; protected $deploymentConfigWriter; protected $deploymentConfigReader; protected $configFactory; protected $storeManager; public function __construct(\Magento\Framework\App\DeploymentConfig\Writer $deploymentConfigWriter, \Magento\Framework\App\DeploymentConfig\Reader $deploymentConfigReader, \Magento\Framework\App\Config $config, \Magento\Config\Model\Config\Factory $configFactory, \Magento\Store\Model\StoreManagerInterface $storeManager) { goto Eaacd; Eaacd: $this->deploymentConfigWriter = $deploymentConfigWriter; goto e2682; fffb1: $this->config = $config; goto D8019; e2682: $this->deploymentConfigReader = $deploymentConfigReader; goto fffb1; E43f9: $this->storeManager = $storeManager; goto a084e; D8019: $this->configFactory = $configFactory; goto E43f9; a084e: } public function isEnabled($store = null) { $isEnabled = (bool) $this->getConfigValue("\155\147\x74\x5f\166\x61\x72\156\151\x73\x68\x2f\155\157\x64\x75\x6c\145\57\x69\x73\x5f\x65\x6e\141\x62\x6c\145\x64", $store); return $isEnabled; } public function getServerList($store = null) { $serverList = array_map("\164\x72\x69\155", explode("\x2c", (string) $this->getConfigValue("\x6d\x67\x74\137\166\141\162\x6e\151\x73\150\x2f\155\x6f\144\165\154\145\57\x73\145\x72\166\145\162\137\x6c\x69\163\x74", $store))); return $serverList; } public function getExcludedRoutes($store = null) { $excludedRoutes = explode("\xa", trim((string) $this->getConfigValue("\x6d\x67\164\137\x76\x61\162\156\151\x73\150\57\x6d\x6f\x64\165\x6c\x65\57\145\170\x63\x6c\x75\144\x65\144\137\162\x6f\x75\x74\x65\163", $store))); return $excludedRoutes; } public function getExcludedUrls($store = null) { $excludedUrls = explode("\12", trim((string) $this->getConfigValue("\x6d\147\164\137\166\x61\x72\x6e\x69\x73\x68\57\x6d\x6f\x64\x75\x6c\x65\57\x65\x78\x63\x6c\x75\x64\145\x64\x5f\165\162\154\x73", $store))); return $excludedUrls; } public function getExcludedParams($store = null) { $excludedParams = array_map("\164\x72\x69\x6d", explode("\x2c", $this->getConfigValue("\x6d\x67\164\x5f\166\141\162\x6e\x69\163\x68\57\x6d\157\144\x75\x6c\x65\x2f\x65\170\x63\x6c\x75\x64\x65\144\137\160\x61\162\x61\155\163", $store))); return $excludedParams; } public function getDefaultCacheLifetime($store = null) { $defaultCacheLifetime = (int) $this->getConfigValue("\155\x67\164\137\166\141\x72\x6e\151\x73\x68\x2f\155\x6f\x64\165\154\145\57\144\145\x66\141\x75\154\x74\x5f\143\x61\x63\150\145\137\154\x69\146\145\x74\x69\155\145", $store); return $defaultCacheLifetime; } public function isDebugModeEnabled($store = null) { $isDebugModeEnabled = (bool) $this->getConfigValue("\155\x67\x74\x5f\x76\x61\162\156\x69\x73\150\57\155\157\x64\x75\154\x65\57\x64\145\x62\165\x67\137\x6d\157\x64\x65", $store); return $isDebugModeEnabled; } public function getApiSecretKey($store = null) { $apiSecretKey = trim((string) $this->getConfigValue("\x6d\147\164\137\166\141\162\x6e\x69\x73\150\x2f\x6d\x6f\x64\x75\154\145\x2f\x61\x70\151\x5f\x73\145\143\162\145\164\x5f\x6b\145\171", $store)); return $apiSecretKey; } public function getRoutesCacheLifetime($store = null) { goto B53e1; B55d6: $routesCacheLifetime = json_decode($routesCacheLifetime, true); goto D572f; ac7da: return $routesCacheLifetime; goto F2e9f; D572f: $routesCacheLifetime = (array) $routesCacheLifetime; goto ac7da; B53e1: $routesCacheLifetime = trim((string) $this->getConfigValue("\x6d\x67\x74\x5f\166\141\162\x6e\x69\x73\150\57\155\157\x64\x75\x6c\145\57\162\157\x75\x74\145\x73\x5f\x63\141\x63\x68\145\137\154\x69\x66\x65\x74\151\x6d\145", $store)); goto B55d6; F2e9f: } public function isCacheWarmerEnabled($store = null) { $isCacheWarmerEnabled = (bool) $this->getConfigValue("\x6d\x67\164\x5f\x76\141\x72\x6e\151\163\x68\57\155\157\144\165\154\x65\57\x63\x61\x63\150\x65\137\x77\141\162\x6d\x65\162\x5f\145\156\x61\x62\x6c\145\x64", $store); return $isCacheWarmerEnabled; } public function getCacheWarmerRoutes($store = null) { $cacheWarmerRoutes = array_map("\164\162\x69\x6d", explode("\12", trim($this->getConfigValue("\155\147\x74\x5f\166\x61\x72\x6e\151\163\150\57\x6d\157\x64\165\x6c\145\x2f\143\141\x63\x68\145\137\x77\141\162\155\x65\162\137\162\x6f\x75\x74\145\x73", $store)))); return $cacheWarmerRoutes; } public function getNumberOfCacheWarmerThreads($store = null) { $numberOfCacheWarmerThreads = (int) $this->getConfigValue("\155\x67\164\137\x76\141\162\156\x69\x73\150\57\155\157\144\165\154\145\57\x63\x61\143\150\145\137\x77\141\x72\155\x65\x72\137\x74\150\162\x65\x61\x64\163", $store); return $numberOfCacheWarmerThreads; } public function getCacheWarmerCpuLimit($store = null) { $cacheWarmerCpuLimit = (int) $this->getConfigValue("\155\x67\164\137\x76\x61\x72\x6e\x69\163\x68\57\x6d\157\144\x75\154\145\x2f\x63\x61\143\x68\x65\137\x77\141\162\x6d\x65\162\137\x63\160\165\137\x6c\151\x6d\151\164", $store); return $cacheWarmerCpuLimit; } public function isCacheWarmerCpuLimitEnabled($store = null) { $isCacheWarmerCpuLimitEnabled = (bool) $this->getConfigValue("\155\x67\164\137\166\x61\x72\156\151\163\x68\57\x6d\x6f\144\x75\x6c\x65\57\x63\x61\x63\150\x65\137\167\x61\x72\x6d\x65\162\137\x63\160\165\x5f\154\151\x6d\151\x74\x5f\x65\156\x61\x62\154\x65\x64", $store); return $isCacheWarmerCpuLimitEnabled; } protected function getConfigValue($path, $store = null, $scope = \Magento\Store\Model\ScopeInterface::SCOPE_STORE) { goto Af8fb; Af8fb: if (!(null === $store)) { goto Ed5a0; } goto Ceb73; b437a: $configValue = $this->config->getValue($path, $scope, $store); goto E7770; eb51d: Ed5a0: goto b437a; E7770: return $configValue; goto c4a7e; Ceb73: $store = $this->storeManager->getStore(); goto eb51d; c4a7e: } }
